version: "3.5"

services:
  zaak-gateway:
    networks:
      - zaken_network
      - top_and_zaak_backend_bridge
    build: app
    hostname: zaak-gateway
    image: zaak-gateway
    ports:
      - 8080:8000
      - 5678:5678
    depends_on:
      - database
    environment:
      - ENVIRONMENT=development
      - DJANGO_SECRET_KEY=local
      - UWSGI_HTTP=0.0.0.0:8000
      - UWSGI_STATIC_MAP=/static=/static
      - DATABASE_NAME=zaken
      - DATABASE_USER=zaken
      - DATABASE_PASSWORD=insecure
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - SENTRY_DSN=https://foo@foo.data.amsterdam.nl/0
      - LOCAL_DEVELOPMENT_AUTHENTICATION=True
      - SECRET_KEY_TOP_ZAKEN=SECRET_KEY_TOP_ZAKEN
      - BELASTING_API_URL=https://api-acc.belastingen.centric.eu/bel/inn/afne/vora/v1/vorderingenidentificatienummer/
      - BAG_API_SEARCH_URL=https://api.data.amsterdam.nl/atlas/search/adres/
      - DECOS_JOIN_USERNAME=ZakenTop
      - DECOS_JOIN_PASSWORD=insecure
      - RABBIT_MQ_USERNAME=rabbit_user
      - RABBIT_MQ_PASSWORD=rabbit_password
      - CELERY_BROKER=amqp://rabbit_user:rabbit_password@rabbitmq:5672
    command: bash -c "/app/wait-for.sh database:5432 && /app/deploy/docker-entrypoint.development.sh"
    volumes:
      - ./app:/app
    stdin_open: true
    tty: true

  database:
    networks:
      - zaken_network
    image: amsterdam/postgres11
    shm_size: "512m"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: zaken
      POSTGRES_USER: zaken
      POSTGRES_PASSWORD: insecure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3
    networks:
      - zaken_network
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit_user
      - RABBITMQ_DEFAULT_PASS=rabbit_password

  zaken_celery_worker:
    image: zaak-gateway
    container_name: zaken_celery_worker
    hostname: zaken_celery_worker
    # /app/wait-for.sh rabbitmq:5672 &&  && /app/wait-for.sh zaak-gateway:8000
    # command: bash -c "/app/wait-for.sh rabbitmq:5672 -- celery -A config worker -l info"
    command: bash -c "/app/wait-for.sh rabbitmq:5672  && wait-for zaak-gateway:8000 && /app/celery.sh"
    depends_on:
      - zaak-gateway
      - database
      - rabbitmq
    environment:
      - RABBIT_MQ_USERNAME=rabbit_user
      - RABBIT_MQ_PASSWORD=rabbit_password
      - CELERY_BROKER=amqp://rabbit_user:rabbit_password@rabbitmq:5672
      - DJANGO_SECRET_KEY=local
    # deploy:
    #   replicas: 2
    #   restart_policy:
    #     condition: on-failure
    #   resources:
    #     limits:
    #       cpus: '0.50'
    #       memory: 50M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 20M
    networks:
      - zaken_network
    # restart: on-failure

  # zaken_celery_beat:
  #   image: zaak-gateway
  #   container_name: zaken_celery_beat
  #   hostname: zaken_celery_beat
  #   command: sh -c "/app/wait-for.sh rabbitmq:5672 && /app/wait-for.sh zaak-gateway:8000 && celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
  #   depends_on:
  #     - zaak-gateway
  #     - database
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rabbit_user
  #     - RABBITMQ_DEFAULT_PASS=rabbit_password
  #     - DJANGO_SECRET_KEY=local
  #   networks:
  #     - zaken_network
    # restart: on-failure


networks:
  zaken_network:
    external: true
  top_and_zaak_backend_bridge:
    external: true

volumes:
  postgresql-data:
