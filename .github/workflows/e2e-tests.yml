# action.yml
name: 'Run Integration test'
on:
  push:
    branches:
      - develop
  pull_request:
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      ###################################################
      # CHECKOUT
      ###################################################

      - name: Checkout backend
        uses: actions/checkout@v2


      ###################################################
      # BACKEND
      ###################################################

      - run: docker network create zaken_network
      - run: docker network create top_and_zaak_backend_bridge
      - run: docker-compose -f docker-compose.test.yml up --detach
      - run: sleep 30
      - run: bash bin/setup_credentials.sh
      - run: docker-compose run --rm zaak-gateway python manage.py shell -c "from apps.summons.models import SummonType; SummonType.objects.get_or_create(workflow_option='sluiting', name='Sluiting', theme_id=1); SummonType.objects.get_or_create(workflow_option='legalisatie-brief', name='Legalisatie-brief', theme_id=1); SummonType.objects.get_or_create(workflow_option='waarschuwingsbrief', name='Waarschuwingsbrief', theme_id=1)"
      - run: docker-compose run --rm zaak-gateway python manage.py shell -c "from apps.decisions.models import DecisionType; DecisionType.objects.get_or_create(workflow_option='no_decision', name='Afzien voornemen', is_sanction=False, theme_id=1)"
      - run: docker-compose run --rm zaak-gateway python manage.py shell -c "from django.contrib.auth import get_user_model; get_user_model().objects.get_or_create(email='local.user@dev.com', first_name='local', last_name='user')"
      - run: docker-compose run --rm zaak-gateway python manage.py shell -c "from apps.users.models import User, UserGroup; from django.contrib.auth.models import Permission; (group, _) = UserGroup.objects.get_or_create(name='PROJECTHANDHAVER', display_name='Projecthandhaver'); group.permissions.add(Permission.objects.get(name='Close a Case (by performing the last task)')); group.permissions.add(Permission.objects.get(name='Create a new Case')); group.permissions.add(Permission.objects.get(name='Can perform a tasks')); user = User.objects.get(email='local.user@dev.com'); user.groups.add(group)"
      - run: docker-compose run --rm zaak-gateway python manage.py shell -c "from django_celery_beat.models import PeriodicTask, IntervalSchedule; schedule, created = IntervalSchedule.objects.get_or_create(every=10, period=IntervalSchedule.SECONDS); PeriodicTask.objects.get_or_create(interval=schedule, name='Update workflows', task='apps.workflow.tasks.task_update_workflows')"


      ###################################################
      # TEST
      ###################################################

      - run: sudo apt-get install python3.9

      - run: python3.9 -m pip install -r requirements.txt
        working-directory: e2e-tests

      - run: API_HOST=http://127.0.0.1:8080/api/v1 LOGLEVEL=INFO python3.9 -m unittest
        working-directory: e2e-tests


      ###################################################
      # On failure
      ###################################################

      - if: ${{ failure() }}
        name: "ON FAILURE: Which containers were running while failing?"
        run: docker ps -a

      - if: ${{ failure() }}
        name: "ON FAILURE: Backend logs"
        run: docker logs zaken-backend_zaak-gateway_1

      - if: ${{ failure() }}
        name: "ON FAILURE: Database logs"
        run: docker logs zaken-backend_database_1
